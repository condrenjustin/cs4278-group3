{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skyle\\\\Desktop\\\\PoSWE\\\\cs4278-group3\\\\src\\\\pages\\\\Calendar.js\";\n\n/**\r\n * Group 3\r\n * Homework 3\r\n * Grant Bowlds (grant.f.bowlds@vanderbilt.edu) \r\n * Donny Carr (donovan.e.carr@vanderbilt.edu) \r\n * Justin Condren (justin.l.condren@vanderbilt.edu)\r\n * Skyler Grandel (skyler.h.grandel@vanderbilt.edu)\r\n */\nimport React from 'react';\nimport NavBar from '../components/NavBar';\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport Airtable from 'airtable';\n/**\r\n * This is the calendar page with two calendars: a sales calendar and a event calendar\r\n * The calendars are next to each other so users can see both calendars in the same view\r\n * It includes a Google Calendar integration\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CAL extends React.Component {\n  render() {\n    /** Calendar for existing events */\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: \"https://airtable.com/embed/shrUeUoHKI6Tbowma?backgroundColor=purple&viewControls=on\",\n        width: 1000,\n        height: 533,\n        title: \"events calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nclass ACTCAL extends React.Component {\n  render() {\n    /** Sales calendar */\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: \"https://airtable.com/embed/shrFBCTmc1ADoYCEO?backgroundColor=purple&viewControls=on\",\n        width: 1000,\n        height: 533,\n        title: \"sales calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nclass Calendar extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      //google info\n      clientId: \"\",\n      apiKey: \"\",\n      discoveryDocs: [],\n      scope: \"\",\n      // state for Gcal form\n      options: [],\n      // list of clients that a user could be reminded about\n      selectedOptions: [],\n      // clients currently selected by user\n      date: '',\n      // date the user should be reminded\n      openForm: false,\n      // state to see if the form should be visible\n      error: ''\n    };\n\n    this.componentDidMount = async () => {\n      // get the data from airtable then assign it to this.state.options\n      this.getData().then(arr => {\n        this.setState({\n          options: arr,\n          // google api information\n          clientId: \"1075606334020-sdhvje80qvau18224tlqfb0g1gb5dqeb.apps.googleusercontent.com\",\n          apiKey: \"AIzaSyDi6f8GTovPHez69kp77CvTSAEzSYBM__Q\",\n          discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"],\n          scope: \"https://www.googleapis.com/auth/calendar.events\"\n        });\n      }).then(() => {\n        // debugging\n        console.log(\"options: \", this.state.options);\n        console.log(this.state.options[0]);\n      });\n    };\n\n    this.getData = async () => {\n      var retArr = []; // array to hold values from db\n\n      var base = new Airtable({\n        apiKey: 'keypmQe98NRiZBQcw'\n      }).base('appECiA8jbyRdHrbu'); // access db\n      // from the CRM-Prospects table, access all entries\n\n      base('CRM-Prospects').select({\n        view: \"All Contacts\"\n      }).eachPage(function page(records, fetchNextPage) {\n        // This function (`page`) will get called for each page of records.\n        // get the name, org, and email of each contact in the table and concat them into a string \n        // then append it to the array\n        records.forEach(record => {\n          var name = record.get('Name & organization');\n          var email = record.get('Email');\n\n          if (name && email) {\n            // if either field is undefined, don't add it\n            retArr.push(name + ' (' + email + ')');\n          }\n        }); // To fetch the next page of records, call `fetchNextPage`.\n        // If there are more records, `page` will get called again.\n        // If there are no more records, `done` will get called.\n\n        fetchNextPage();\n      }).then(err => {\n        if (err) {\n          console.error(err);\n          return;\n        }\n\n        this.setState({\n          openForm: true\n        });\n      });\n      return retArr;\n    };\n\n    this.onSelectedOptionsChange = e => {\n      // this gets the item that was clicked in the multiselect form\n      var selection = [].slice.call(e.target.selectedOptions).map(item => item.value)[0]; // if it was already selected, remove it, otherwise, add it to the list of selected options\n\n      if (this.state.selectedOptions.includes(selection)) {\n        this.setState({\n          selectedOptions: this.state.selectedOptions.filter(e => e !== selection)\n        });\n      } else {\n        this.state.selectedOptions.push(selection);\n      }\n    };\n\n    this.formatSelections = () => {\n      var str = '';\n      this.state.selectedOptions.forEach(e => {\n        str = str.concat('\\n', e);\n      });\n      str = str.concat('\\n\\nSend emails from templates at koacore.co');\n      return str;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // prevent page reload\n\n      if (this.state.selectedOptions.length <= 0 || this.state.date === '') {\n        this.setState({\n          error: 'Please indicate one or more clients and pick a date'\n        });\n        return;\n      }\n\n      var gapi = window.gapi; // access Google API\n      // load client\n\n      gapi.load('client:auth2', () => {\n        gapi.client.load('calendar', 'v3', () => console.log('Client Loaded')); // load calendar api\n\n        gapi.auth2.getAuthInstance().signIn() // access user profile\n        .then(() => {\n          //define the event we will post to their calendar\n          var event = {\n            'summary': 'Reach out to prospective clients',\n            'description': 'This is a reminder to reach out to the following clients: ' + this.formatSelections(),\n            'start': {\n              'dateTime': this.state.date + 'T09:00:00-05:00' // set the event for 9 to 9:15 central time\n\n            },\n            'end': {\n              'dateTime': this.state.date + 'T09:15:00-05:00'\n            }\n          }; // add the event to the user's primary calendar\n\n          var request = gapi.client.calendar.events.insert({\n            'calendarId': 'primary',\n            'resource': event\n          }); // execute request and log the result\n\n          request.execute(event => {\n            console.log(event);\n            window.open(event.htmlLink);\n          });\n        });\n      });\n    };\n  }\n\n  /**\r\n   * Renders the page\r\n   * @returns the page info to render\r\n   */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        employee: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }, this), this.state.error !== '' && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#ffffff\"\n        },\n        children: \"Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: \"auto\",\n            color: \"#ffffff\"\n          },\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: \"auto\",\n            color: \"#ffffff\"\n          },\n          children: \"Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CAL, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ACTCAL, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: \"auto\",\n          marginTop: \"20px\",\n          marginBottom: \"20px\",\n          color: \"#ffffff\"\n        },\n        children: \"Set a Google Calendar reminder to contact a client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }, this), this.state.openForm ? /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"80%\",\n            margin: 'auto',\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            style: {\n              width: \"50%\",\n              margin: 'auto'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                color: \"#ffffff\"\n              },\n              children: \"Which clients do you want to contact?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              size: \"lg\",\n              multiple: true,\n              value: this.state.selectedOptions,\n              onChange: this.onSelectedOptionsChange,\n              style: {\n                height: '200px'\n              },\n              children: this.state.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                style: {\n                  marginBottom: '10px'\n                },\n                children: option.split('(')[0]\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            style: {\n              width: \"50%\",\n              margin: 'auto',\n              marginTop: '0px',\n              marginLeft: '5%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                color: \"#ffffff\"\n              },\n              children: \"When should you be reminded?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              size: \"lg\",\n              value: this.state.date,\n              onChange: e => this.setState({\n                date: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          style: {\n            marginBottom: '80px'\n          },\n          children: \"Add to Google Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n        style: {\n          marginBottom: '80px'\n        },\n        animation: \"border\",\n        variant: \"light\",\n        size: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["C:/Users/skyle/Desktop/PoSWE/cs4278-group3/src/pages/Calendar.js"],"names":["React","NavBar","Form","Button","Alert","Spinner","Airtable","CAL","Component","render","ACTCAL","Calendar","state","clientId","apiKey","discoveryDocs","scope","options","selectedOptions","date","openForm","error","componentDidMount","getData","then","arr","setState","console","log","retArr","base","select","view","eachPage","page","records","fetchNextPage","forEach","record","name","get","email","push","err","onSelectedOptionsChange","e","selection","slice","call","target","map","item","value","includes","filter","formatSelections","str","concat","handleSubmit","preventDefault","length","gapi","window","load","client","auth2","getAuthInstance","signIn","event","request","calendar","events","insert","execute","open","htmlLink","color","display","alignItems","justifyContent","margin","marginTop","marginBottom","width","height","option","split","marginLeft"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,OAA7B,QAA2C,iBAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AAAA,6BACA;AAAQ,QAAA,GAAG,EAAC,qFAAZ;AACA,QAAA,KAAK,EAAE,IADP;AACa,QAAA,MAAM,EAAE,GADrB;AAC0B,QAAA,KAAK,EAAC;AADhC;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAMD;;AAT+B;;AAYlC,MAAMC,MAAN,SAAqBV,KAAK,CAACQ,SAA3B,CAAqC;AACjCC,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AAAA,6BACA;AAAQ,QAAA,GAAG,EAAC,qFAAZ;AACA,QAAA,KAAK,EAAE,IADP;AACa,QAAA,MAAM,EAAE,GADrB;AAC0B,QAAA,KAAK,EAAC;AADhC;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAMD;;AATgC;;AAYrC,MAAME,QAAN,SAAuBX,KAAK,CAACQ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCI,KAFqC,GAE7B;AACN;AACAC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,aAAa,EAAE,EAJT;AAKNC,MAAAA,KAAK,EAAE,EALD;AAON;AACAC,MAAAA,OAAO,EAAE,EARH;AAQO;AACbC,MAAAA,eAAe,EAAE,EATX;AASe;AACrBC,MAAAA,IAAI,EAAE,EAVA;AAUI;AACVC,MAAAA,QAAQ,EAAE,KAXJ;AAWW;AACjBC,MAAAA,KAAK,EAAE;AAZD,KAF6B;;AAAA,SAoBrCC,iBApBqC,GAoBjB,YAAW;AAE7B;AACA,WAAKC,OAAL,GAAeC,IAAf,CAAqBC,GAAD,IAAQ;AAC1B,aAAKC,QAAL,CAAc;AACZT,UAAAA,OAAO,EAAEQ,GADG;AAGZ;AACAZ,UAAAA,QAAQ,EAAE,2EAJE;AAKZC,UAAAA,MAAM,EAAE,yCALI;AAMZC,UAAAA,aAAa,EAAE,CAAC,+DAAD,CANH;AAOZC,UAAAA,KAAK,EAAE;AAPK,SAAd;AASD,OAVD,EAUGQ,IAVH,CAUQ,MAAI;AAEV;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKhB,KAAL,CAAWK,OAApC;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWK,OAAX,CAAmB,CAAnB,CAAZ;AACD,OAfD;AAgBD,KAvCoC;;AAAA,SA6CrCM,OA7CqC,GA6C3B,YAAW;AACnB,UAAIM,MAAM,GAAG,EAAb,CADmB,CACF;;AACjB,UAAIC,IAAI,GAAG,IAAIxB,QAAJ,CAAa;AAACQ,QAAAA,MAAM,EAAE;AAAT,OAAb,EAA4CgB,IAA5C,CAAiD,mBAAjD,CAAX,CAFmB,CAE+D;AAElF;;AACAA,MAAAA,IAAI,CAAC,eAAD,CAAJ,CAAsBC,MAAtB,CAA6B;AAC3BC,QAAAA,IAAI,EAAE;AADqB,OAA7B,EAEGC,QAFH,CAEY,SAASC,IAAT,CAAcC,OAAd,EAAuBC,aAAvB,EAAsC;AAChD;AAEA;AACA;AACAD,QAAAA,OAAO,CAACE,OAAR,CAAiBC,MAAD,IAAY;AAC1B,cAAIC,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAW,qBAAX,CAAX;AACA,cAAIC,KAAK,GAAGH,MAAM,CAACE,GAAP,CAAW,OAAX,CAAZ;;AAEA,cAAGD,IAAI,IAAIE,KAAX,EAAiB;AAAE;AACjBZ,YAAAA,MAAM,CAACa,IAAP,CAAYH,IAAI,GAAG,IAAP,GAAcE,KAAd,GAAsB,GAAlC;AACD;AACF,SAPD,EALgD,CAchD;AACA;AACA;;AACAL,QAAAA,aAAa;AAEd,OArBD,EAqBGZ,IArBH,CAqBSmB,GAAD,IAAS;AACf,YAAIA,GAAJ,EAAS;AAAEhB,UAAAA,OAAO,CAACN,KAAR,CAAcsB,GAAd;AAAoB;AAAS;;AACxC,aAAKjB,QAAL,CAAc;AAACN,UAAAA,QAAQ,EAAC;AAAV,SAAd;AACD,OAxBD;AA0BA,aAAOS,MAAP;AACD,KA7EoC;;AAAA,SAoFrCe,uBApFqC,GAoFVC,CAAD,IAAO;AAC/B;AACA,UAAIC,SAAS,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcH,CAAC,CAACI,MAAF,CAAS/B,eAAvB,EAAwCgC,GAAxC,CAA4CC,IAAI,IAAIA,IAAI,CAACC,KAAzD,EAAgE,CAAhE,CAAhB,CAF+B,CAI/B;;AACA,UAAG,KAAKxC,KAAL,CAAWM,eAAX,CAA2BmC,QAA3B,CAAoCP,SAApC,CAAH,EAAkD;AAChD,aAAKpB,QAAL,CAAc;AAACR,UAAAA,eAAe,EAAE,KAAKN,KAAL,CAAWM,eAAX,CAA2BoC,MAA3B,CAAkCT,CAAC,IAAIA,CAAC,KAAKC,SAA7C;AAAlB,SAAd;AACD,OAFD,MAEO;AACL,aAAKlC,KAAL,CAAWM,eAAX,CAA2BwB,IAA3B,CAAgCI,SAAhC;AACD;AACF,KA9FoC;;AAAA,SAoGrCS,gBApGqC,GAoGlB,MAAM;AACvB,UAAIC,GAAG,GAAG,EAAV;AACA,WAAK5C,KAAL,CAAWM,eAAX,CAA2BmB,OAA3B,CAAoCQ,CAAD,IAAK;AACtCW,QAAAA,GAAG,GAAGA,GAAG,CAACC,MAAJ,CAAW,IAAX,EAAiBZ,CAAjB,CAAN;AACD,OAFD;AAIAW,MAAAA,GAAG,GAAGA,GAAG,CAACC,MAAJ,CAAW,8CAAX,CAAN;AAEA,aAAOD,GAAP;AACD,KA7GoC;;AAAA,SAoHrCE,YApHqC,GAoHrBb,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACc,cAAF,GADoB,CACA;;AACpB,UAAG,KAAK/C,KAAL,CAAWM,eAAX,CAA2B0C,MAA3B,IAAqC,CAArC,IAA0C,KAAKhD,KAAL,CAAWO,IAAX,KAAoB,EAAjE,EAAoE;AAClE,aAAKO,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAE;AAAR,SAAd;AACA;AACD;;AAED,UAAIwC,IAAI,GAAGC,MAAM,CAACD,IAAlB,CAPoB,CAOI;AAExB;;AACAA,MAAAA,IAAI,CAACE,IAAL,CAAU,cAAV,EAA0B,MAAM;AAC9BF,QAAAA,IAAI,CAACG,MAAL,CAAYD,IAAZ,CAAiB,UAAjB,EAA6B,IAA7B,EAAmC,MAAMpC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAzC,EAD8B,CACyC;;AAEvEiC,QAAAA,IAAI,CAACI,KAAL,CAAWC,eAAX,GAA6BC,MAA7B,GAAsC;AAAtC,SACC3C,IADD,CACM,MAAM;AAEV;AACA,cAAI4C,KAAK,GAAG;AACV,uBAAW,kCADD;AAEV,2BAAe,+DAA+D,KAAKb,gBAAL,EAFpE;AAGV,qBAAS;AACP,0BAAY,KAAK3C,KAAL,CAAWO,IAAX,GAAkB,iBADvB,CAC0C;;AAD1C,aAHC;AAMV,mBAAO;AACL,0BAAY,KAAKP,KAAL,CAAWO,IAAX,GAAkB;AADzB;AANG,WAAZ,CAHU,CAcV;;AACA,cAAIkD,OAAO,GAAGR,IAAI,CAACG,MAAL,CAAYM,QAAZ,CAAqBC,MAArB,CAA4BC,MAA5B,CAAmC;AAC/C,0BAAc,SADiC;AAE/C,wBAAYJ;AAFmC,WAAnC,CAAd,CAfU,CAoBV;;AACAC,UAAAA,OAAO,CAACI,OAAR,CAAgBL,KAAK,IAAI;AACvBzC,YAAAA,OAAO,CAACC,GAAR,CAAYwC,KAAZ;AACAN,YAAAA,MAAM,CAACY,IAAP,CAAYN,KAAK,CAACO,QAAlB;AACD,WAHD;AAID,SA1BD;AA2BD,OA9BD;AA+BD,KA7JoC;AAAA;;AA+JrC;AACF;AACA;AACA;AACElE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,EAGK,KAAKG,KAAL,CAAWS,KAAX,KAAqB,EAArB,iBAA2B,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA,kBAAyB,KAAKT,KAAL,CAAWS;AAApC;AAAA;AAAA;AAAA;AAAA,cAHhC,eAKI;AAAI,QAAA,KAAK,EAAE;AAACuD,UAAAA,KAAK,EAAC;AAAP,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,KAAK,EAAE;AACRC,UAAAA,OAAO,EAAE,MADD;AAERC,UAAAA,UAAU,EAAE,QAFJ;AAGRC,UAAAA,cAAc,EAAE;AAHR,SAAZ;AAAA,gCAKI;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAC,MAAR;AAAgBJ,YAAAA,KAAK,EAAC;AAAtB,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAI,UAAA,KAAK,EAAE;AAACI,YAAAA,MAAM,EAAC,MAAR;AAAgBJ,YAAAA,KAAK,EAAC;AAAtB,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAcI;AAAK,QAAA,KAAK,EAAE;AACRC,UAAAA,OAAO,EAAE,MADD;AAERC,UAAAA,UAAU,EAAE,QAFJ;AAGRC,UAAAA,cAAc,EAAE;AAHR,SAAZ;AAAA,gCAKI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAwBI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAC,MAAR;AAAgBC,UAAAA,SAAS,EAAC,MAA1B;AAAkCC,UAAAA,YAAY,EAAC,MAA/C;AAAuDN,UAAAA,KAAK,EAAC;AAA7D,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ,EAyBK,KAAKhE,KAAL,CAAWQ,QAAX,gBACC,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKsC,YAArB;AAAA,gCAEI;AAAK,UAAA,KAAK,EAAE;AAACyB,YAAAA,KAAK,EAAC,KAAP;AAAcH,YAAAA,MAAM,EAAC,MAArB;AAA6BH,YAAAA,OAAO,EAAC;AAArC,WAAZ;AAAA,kCAEA,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,KAAK,EAAE;AAACM,cAAAA,KAAK,EAAC,KAAP;AAAcH,cAAAA,MAAM,EAAC;AAArB,aAApC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,KAAK,EAAE;AAACJ,gBAAAA,KAAK,EAAC;AAAP,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACA,cAAA,EAAE,EAAC,QADH;AAEA,cAAA,IAAI,EAAC,IAFL;AAGA,cAAA,QAAQ,MAHR;AAIA,cAAA,KAAK,EAAE,KAAKhE,KAAL,CAAWM,eAJlB;AAKA,cAAA,QAAQ,EAAE,KAAK0B,uBALf;AAMA,cAAA,KAAK,EAAE;AAACwC,gBAAAA,MAAM,EAAC;AAAR,eANP;AAAA,wBAOG,KAAKxE,KAAL,CAAWK,OAAX,CAAmBiC,GAAnB,CAAuBmC,MAAM,iBAC5B;AAAqB,gBAAA,KAAK,EAAEA,MAA5B;AAAoC,gBAAA,KAAK,EAAE;AAACH,kBAAAA,YAAY,EAAC;AAAd,iBAA3C;AAAA,0BACGG,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkB,CAAlB;AADH,iBAAaD,MAAb;AAAA;AAAA;AAAA;AAAA,sBADD;AAPH;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAmBA,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,KAAK,EAAE;AAACF,cAAAA,KAAK,EAAC,KAAP;AAAcH,cAAAA,MAAM,EAAC,MAArB;AAA6BC,cAAAA,SAAS,EAAC,KAAvC;AAA8CM,cAAAA,UAAU,EAAC;AAAzD,aAApC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,KAAK,EAAE;AAACX,gBAAAA,KAAK,EAAC;AAAP,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACA,cAAA,IAAI,EAAC,MADL;AAEA,cAAA,IAAI,EAAC,IAFL;AAGA,cAAA,KAAK,EAAE,KAAKhE,KAAL,CAAWO,IAHlB;AAIA,cAAA,QAAQ,EAAG0B,CAAD,IAAK,KAAKnB,QAAL,CAAc;AAACP,gBAAAA,IAAI,EAAC0B,CAAC,CAACI,MAAF,CAASG;AAAf,eAAd;AAJf;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAiCI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAwC,UAAA,KAAK,EAAE;AAAC8B,YAAAA,YAAY,EAAE;AAAf,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAsCG,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAACA,UAAAA,YAAY,EAAC;AAAd,SAAhB;AAAuC,QAAA,SAAS,EAAC,QAAjD;AAA0D,QAAA,OAAO,EAAC,OAAlE;AAA0E,QAAA,IAAI,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,cA/DR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqEH;;AAzOoC;;AA4OvC,eAAevE,QAAf","sourcesContent":["/**\r\n * Group 3\r\n * Homework 3\r\n * Grant Bowlds (grant.f.bowlds@vanderbilt.edu) \r\n * Donny Carr (donovan.e.carr@vanderbilt.edu) \r\n * Justin Condren (justin.l.condren@vanderbilt.edu)\r\n * Skyler Grandel (skyler.h.grandel@vanderbilt.edu)\r\n */\r\n\r\nimport React from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport {Form, Button, Alert, Spinner} from 'react-bootstrap';\r\nimport Airtable from 'airtable';\r\n\r\n/**\r\n * This is the calendar page with two calendars: a sales calendar and a event calendar\r\n * The calendars are next to each other so users can see both calendars in the same view\r\n * It includes a Google Calendar integration\r\n */\r\n\r\nclass CAL extends React.Component {\r\n  render() {\r\n    /** Calendar for existing events */\r\n    return (\r\n      <>\r\n      <iframe src=\"https://airtable.com/embed/shrUeUoHKI6Tbowma?backgroundColor=purple&viewControls=on\" \r\n      width={1000} height={533} title=\"events calendar\"/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass ACTCAL extends React.Component {\r\n    render() {\r\n      /** Sales calendar */\r\n      return (\r\n        <>\r\n        <iframe src=\"https://airtable.com/embed/shrFBCTmc1ADoYCEO?backgroundColor=purple&viewControls=on\"\r\n        width={1000} height={533} title=\"sales calendar\"/>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\nclass Calendar extends React.Component {\r\n\r\n  state = {\r\n    //google info\r\n    clientId: \"\",\r\n    apiKey: \"\",\r\n    discoveryDocs: [],\r\n    scope: \"\",\r\n\r\n    // state for Gcal form\r\n    options: [], // list of clients that a user could be reminded about\r\n    selectedOptions: [], // clients currently selected by user\r\n    date: '', // date the user should be reminded\r\n    openForm: false, // state to see if the form should be visible\r\n    error: ''\r\n  }\r\n\r\n  /**\r\n   * Functoin called on initial load it initialize state\r\n   */\r\n  componentDidMount = async() => {\r\n\r\n    // get the data from airtable then assign it to this.state.options\r\n    this.getData().then((arr) =>{\r\n      this.setState({\r\n        options: arr,\r\n\r\n        // google api information\r\n        clientId: \"1075606334020-sdhvje80qvau18224tlqfb0g1gb5dqeb.apps.googleusercontent.com\",\r\n        apiKey: \"AIzaSyDi6f8GTovPHez69kp77CvTSAEzSYBM__Q\",\r\n        discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"],\r\n        scope: \"https://www.googleapis.com/auth/calendar.events\",\r\n      });\r\n    }).then(()=>{\r\n\r\n      // debugging\r\n      console.log(\"options: \", this.state.options);\r\n      console.log(this.state.options[0]); \r\n    })\r\n  }\r\n\r\n  /**\r\n   * Gets the required data from the database\r\n   * @returns An array of strings with name, org, and email of all clients in the db\r\n   */\r\n  getData = async() => {\r\n    var retArr = []; // array to hold values from db\r\n    var base = new Airtable({apiKey: 'keypmQe98NRiZBQcw'}).base('appECiA8jbyRdHrbu'); // access db\r\n\r\n    // from the CRM-Prospects table, access all entries\r\n    base('CRM-Prospects').select({\r\n      view: \"All Contacts\"\r\n    }).eachPage(function page(records, fetchNextPage) {\r\n      // This function (`page`) will get called for each page of records.\r\n  \r\n      // get the name, org, and email of each contact in the table and concat them into a string \r\n      // then append it to the array\r\n      records.forEach((record) => {\r\n        var name = record.get('Name & organization');\r\n        var email = record.get('Email');\r\n\r\n        if(name && email){ // if either field is undefined, don't add it\r\n          retArr.push(name + ' (' + email + ')');\r\n        }\r\n      });\r\n  \r\n      // To fetch the next page of records, call `fetchNextPage`.\r\n      // If there are more records, `page` will get called again.\r\n      // If there are no more records, `done` will get called.\r\n      fetchNextPage();\r\n  \r\n    }).then((err) => {\r\n      if (err) { console.error(err); return; }\r\n      this.setState({openForm:true});\r\n    });\r\n\r\n    return retArr;\r\n  }\r\n\r\n  /**\r\n   * Update the selectedOptions variable when user selects new clients\r\n   * or when they want to remove a client from their selection\r\n   * @param {event} e : state change event\r\n   */\r\n  onSelectedOptionsChange = (e) => {\r\n    // this gets the item that was clicked in the multiselect form\r\n    var selection = [].slice.call(e.target.selectedOptions).map(item => item.value)[0];\r\n\r\n    // if it was already selected, remove it, otherwise, add it to the list of selected options\r\n    if(this.state.selectedOptions.includes(selection)){\r\n      this.setState({selectedOptions: this.state.selectedOptions.filter(e => e !== selection)});\r\n    } else {\r\n      this.state.selectedOptions.push(selection);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the selectedOptions array as a formatted string for use in the Gcal event\r\n   * @returns A formatted string\r\n   */\r\n  formatSelections = () => {\r\n    var str = ''\r\n    this.state.selectedOptions.forEach((e)=>{\r\n      str = str.concat('\\n', e);\r\n    });\r\n\r\n    str = str.concat('\\n\\nSend emails from templates at koacore.co')\r\n\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   * On form submit, adds the info given to the user's Google Calendar\r\n   * @param {event} e : form submit event\r\n   * @returns void on invalid submit\r\n   */\r\n  handleSubmit = (e) => {\r\n    e.preventDefault(); // prevent page reload\r\n    if(this.state.selectedOptions.length <= 0 || this.state.date === ''){\r\n      this.setState({error: 'Please indicate one or more clients and pick a date'});\r\n      return;\r\n    }\r\n\r\n    var gapi = window.gapi; // access Google API\r\n\r\n    // load client\r\n    gapi.load('client:auth2', () => {\r\n      gapi.client.load('calendar', 'v3', () => console.log('Client Loaded')) // load calendar api\r\n\r\n      gapi.auth2.getAuthInstance().signIn() // access user profile\r\n      .then(() => {\r\n        \r\n        //define the event we will post to their calendar\r\n        var event = {\r\n          'summary': 'Reach out to prospective clients',\r\n          'description': 'This is a reminder to reach out to the following clients: ' + this.formatSelections(),\r\n          'start': {\r\n            'dateTime': this.state.date + 'T09:00:00-05:00', // set the event for 9 to 9:15 central time\r\n          },\r\n          'end': {\r\n            'dateTime': this.state.date + 'T09:15:00-05:00',\r\n          }\r\n        }\r\n\r\n        // add the event to the user's primary calendar\r\n        var request = gapi.client.calendar.events.insert({\r\n          'calendarId': 'primary',\r\n          'resource': event,\r\n        })\r\n\r\n        // execute request and log the result\r\n        request.execute(event => {\r\n          console.log(event)\r\n          window.open(event.htmlLink)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Renders the page\r\n   * @returns the page info to render\r\n   */\r\n  render(){\r\n      return(\r\n          <div>\r\n              <NavBar employee={true} />\r\n\r\n              {this.state.error !== '' && <Alert variant=\"danger\">{this.state.error}</Alert>}\r\n\r\n              <h1 style={{color:\"#ffffff\"}}>Calendar</h1>\r\n              <div style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n              }}>\r\n                  <h2 style={{margin:\"auto\", color:\"#ffffff\"}}>Events</h2>\r\n                  <h2 style={{margin:\"auto\", color:\"#ffffff\"}}>Sales</h2>\r\n              </div>\r\n              <div style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n              }}>\r\n                  <CAL />\r\n                  <p>&nbsp;</p>\r\n                  <ACTCAL />\r\n              </div>\r\n              \r\n              <h2 style={{margin:\"auto\", marginTop:\"20px\", marginBottom:\"20px\", color:\"#ffffff\"}}>Set a Google Calendar reminder to contact a client</h2>\r\n              {this.state.openForm ? (\r\n                <Form onSubmit={this.handleSubmit}>\r\n    \r\n                    <div style={{width:\"80%\", margin:'auto', display:'flex'}}>\r\n    \r\n                    <Form.Group className='mb-3' style={{width:\"50%\", margin:'auto'}}>\r\n                      <Form.Label style={{color:\"#ffffff\"}}>Which clients do you want to contact?</Form.Label>\r\n                      <Form.Control \r\n                      as=\"select\" \r\n                      size='lg' \r\n                      multiple \r\n                      value={this.state.selectedOptions} \r\n                      onChange={this.onSelectedOptionsChange}\r\n                      style={{height:'200px'}}>\r\n                        {this.state.options.map(option => (\r\n                          <option key={option} value={option} style={{marginBottom:'10px'}}>\r\n                            {option.split('(')[0]}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group className='mb-3' style={{width:\"50%\", margin:'auto', marginTop:'0px', marginLeft:'5%'}}>\r\n                      <Form.Label style={{color:\"#ffffff\"}}>When should you be reminded?</Form.Label>\r\n                      <Form.Control\r\n                      type=\"date\"\r\n                      size='lg'\r\n                      value={this.state.date}\r\n                      onChange={(e)=>this.setState({date:e.target.value})}\r\n                      />\r\n                    </Form.Group>\r\n    \r\n                    </div>\r\n    \r\n                    <Button variant=\"primary\" type=\"submit\" style={{marginBottom :'80px'}}>\r\n                            Add to Google Calendar\r\n                    </Button>\r\n                  </Form>\r\n              ) : <Spinner style={{marginBottom:'80px'}} animation=\"border\" variant=\"light\" size='lg' />}\r\n\r\n          </div>\r\n          \r\n      );\r\n  }\r\n}\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}