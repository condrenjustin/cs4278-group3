{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skyle\\\\Desktop\\\\PoSWE\\\\cs4278-group3\\\\src\\\\pages\\\\SignOn.js\";\n\n/**\r\n * Group 3\r\n * Homework 3\r\n * Grant Bowlds (grant.f.bowlds@vanderbilt.edu) \r\n * Donny Carr (donovan.e.carr@vanderbilt.edu) \r\n * Justin Condren (justin.l.condren@vanderbilt.edu)\r\n * Skyler Grandel (skyler.h.grandel@vanderbilt.edu)\r\n */\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { GoogleLogin } from 'react-google-login';\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from '../components/AuthProvider';\nimport logo from '../images/KOA_only_White.PNG';\nimport \"../styles/SignOn.css\";\n/** The sign on page makes users sign in with Google SSO\r\n * Users are redirected based on whether they have a koacore email or not\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignOn extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      id: \"\",\n      name: \"\",\n      img: \"\",\n      email: \"\",\n      guest: false\n    };\n\n    this.onSignIn = async googleUser => {\n      var profile = googleUser.getBasicProfile();\n      console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n      console.log('Name: ' + profile.getName());\n      console.log('Image URL: ' + profile.getImageUrl());\n      console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n\n      this.props.setCurrentUser(await profile.getEmail());\n      this.setState({\n        id: await profile.getId(),\n        name: await profile.getName(),\n        img: await profile.getImageUrl(),\n        email: await profile.getEmail()\n      });\n\n      if (this.state.email.includes(\"@koacore\")) {\n        this.props.navigate('/client-database');\n      } else {\n        this.props.navigate('/client-landing');\n      }\n    };\n\n    this.logout = async () => {\n      console.log(\"Logout called\");\n      this.setState({\n        id: \"\",\n        name: \"\",\n        img: \"\",\n        email: \"\"\n      });\n    };\n  }\n\n  /**\r\n   * log an error if logout is unsuccessful\r\n   * @param {error} response The error that caused the failure\r\n   */\n  failLog(response) {\n    console.log(\"Failed\");\n    console.log(response);\n  }\n  /**\r\n   * On success, we reset the state\r\n   */\n\n\n  /**\r\n   * Component hook to render a page\r\n   * @returns page to render\r\n   */\n  render() {\n    /*\r\n    // let info = null; // to display info, uncomment this and the block below and add {info} to the return()\r\n    if(this.state.id !== \"\"){\r\n      \r\n      info = (<div>\r\n        <p>ID: {this.state.id}</p>\r\n        <p>Name: {this.state.name}</p>\r\n        <p>Email: {this.state.email}</p>\r\n        <img src={this.state.img} alt=\"profile\" style={{borderRadius:\"50%\"}}></img>\r\n        <div>\r\n          <GoogleLogout\r\n            clientId=\"1075606334020-sdhvje80qvau18224tlqfb0g1gb5dqeb.apps.googleusercontent.com\"\r\n            buttonText=\"Logout\"\r\n            onLogoutSuccess={this.logout}\r\n            onFailure={this.failLog}\r\n          >\r\n          </GoogleLogout>\r\n        </div>\r\n      </div>)\r\n    }\r\n    */\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"5%\",\n          marginBottom: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"KOACORE Logo\",\n          style: {\n            width: \"60%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"1075606334020-sdhvje80qvau18224tlqfb0g1gb5dqeb.apps.googleusercontent.com\",\n          discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"],\n          scope: \"https://www.googleapis.com/auth/calendar.events\",\n          buttonText: \"Continue with Google\",\n          onSuccess: this.onSignIn,\n          onFailure: this.failLog,\n          cookiePolicy: 'single_host_origin',\n          isSignedIn: true,\n          theme: \"dark\",\n          width: \"200\",\n          className: \"google-button\"\n        }, 'AIzaSyDi6f8GTovPHez69kp77CvTSAEzSYBM__Q', false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.props.navigate('/client-landing'),\n        variant: \"outline-light\",\n        style: {\n          marginTop: '20px'\n        },\n        children: \"Continue as Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default function (props) {\n  const {\n    setCurrentUser\n  } = useAuth();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(SignOn, { ...props,\n    setCurrentUser: setCurrentUser,\n    navigate: navigate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/skyle/Desktop/PoSWE/cs4278-group3/src/pages/SignOn.js"],"names":["React","Button","GoogleLogin","useNavigate","useAuth","logo","SignOn","Component","state","id","name","img","email","guest","onSignIn","googleUser","profile","getBasicProfile","console","log","getId","getName","getImageUrl","getEmail","props","setCurrentUser","setState","includes","navigate","logout","failLog","response","render","marginTop","marginBottom","width"],"mappings":"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","sourcesContent":["/**\r\n * Group 3\r\n * Homework 3\r\n * Grant Bowlds (grant.f.bowlds@vanderbilt.edu) \r\n * Donny Carr (donovan.e.carr@vanderbilt.edu) \r\n * Justin Condren (justin.l.condren@vanderbilt.edu)\r\n * Skyler Grandel (skyler.h.grandel@vanderbilt.edu)\r\n */\r\n\r\nimport React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport {GoogleLogin} from 'react-google-login';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from '../components/AuthProvider';\r\nimport logo from '../images/KOA_only_White.PNG';\r\nimport \"../styles/SignOn.css\"\r\n\r\n/** The sign on page makes users sign in with Google SSO\r\n * Users are redirected based on whether they have a koacore email or not\r\n */\r\n\r\nclass SignOn extends React.Component {\r\n  // store users Google Account info\r\n  state = {\r\n    id:\"\",\r\n    name:\"\",\r\n    img:\"\",\r\n    email:\"\",\r\n    guest: false\r\n  }\r\n\r\n  /**\r\n   * On successful sign in, get the user's information\r\n   * @param {GoogleUser} googleUser \r\n   */\r\n  onSignIn = async(googleUser) => {\r\n    var profile = googleUser.getBasicProfile();\r\n\r\n    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\r\n    console.log('Name: ' + profile.getName());\r\n    console.log('Image URL: ' + profile.getImageUrl());\r\n    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\r\n\r\n    this.props.setCurrentUser(await profile.getEmail());\r\n\r\n    this.setState({\r\n      id: await profile.getId(),\r\n      name: await profile.getName(),\r\n      img: await profile.getImageUrl(),\r\n      email: await profile.getEmail()\r\n    });\r\n\r\n    if(this.state.email.includes(\"@koacore\")){\r\n      this.props.navigate('/client-database');\r\n     } else {\r\n      this.props.navigate('/client-landing');\r\n     }\r\n  }\r\n\r\n  /**\r\n   * log an error if logout is unsuccessful\r\n   * @param {error} response The error that caused the failure\r\n   */\r\n  failLog(response){\r\n    console.log(\"Failed\");\r\n    console.log(response);\r\n  }\r\n\r\n  /**\r\n   * On success, we reset the state\r\n   */\r\n  logout = async() => {\r\n    console.log(\"Logout called\");\r\n    this.setState({\r\n      id:\"\",\r\n      name:\"\",\r\n      img:\"\",\r\n      email:\"\"\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Component hook to render a page\r\n   * @returns page to render\r\n   */\r\n  render() {\r\n    /*\r\n    // let info = null; // to display info, uncomment this and the block below and add {info} to the return()\r\n    if(this.state.id !== \"\"){\r\n      \r\n      info = (<div>\r\n        <p>ID: {this.state.id}</p>\r\n        <p>Name: {this.state.name}</p>\r\n        <p>Email: {this.state.email}</p>\r\n        <img src={this.state.img} alt=\"profile\" style={{borderRadius:\"50%\"}}></img>\r\n        <div>\r\n          <GoogleLogout\r\n            clientId=\"1075606334020-sdhvje80qvau18224tlqfb0g1gb5dqeb.apps.googleusercontent.com\"\r\n            buttonText=\"Logout\"\r\n            onLogoutSuccess={this.logout}\r\n            onFailure={this.failLog}\r\n          >\r\n          </GoogleLogout>\r\n        </div>\r\n      </div>)\r\n    }\r\n    */\r\n    \r\n\r\n    return(\r\n      <div>\r\n        <div style={{marginTop:\"5%\", marginBottom:\"5%\"}}>\r\n          <img src={logo} alt='KOACORE Logo' style={{width:\"60%\"}}></img>\r\n        </div>\r\n        <div>\r\n            <GoogleLogin\r\n              clientId=\"1075606334020-sdhvje80qvau18224tlqfb0g1gb5dqeb.apps.googleusercontent.com\"\r\n              discoveryDocs={[\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]}\r\n              scope='https://www.googleapis.com/auth/calendar.events'\r\n              key='AIzaSyDi6f8GTovPHez69kp77CvTSAEzSYBM__Q'\r\n              buttonText=\"Continue with Google\"\r\n              onSuccess={this.onSignIn}\r\n              onFailure={this.failLog}\r\n              cookiePolicy={'single_host_origin'}\r\n              isSignedIn={true}\r\n              theme=\"dark\"\r\n              width=\"200\"\r\n              className='google-button'\r\n            />\r\n        </div>\r\n        <Button onClick={()=>this.props.navigate('/client-landing')} \r\n        variant='outline-light'\r\n        style={{marginTop:'20px'}}\r\n        >Continue as Guest</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function(props) {\r\n  const { setCurrentUser } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  return <SignOn {...props} setCurrentUser={setCurrentUser} navigate={navigate}/>;\r\n}"]},"metadata":{},"sourceType":"module"}